-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pixel_dma_in is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_AXI_LITE_1_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_AXI_LITE_1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    axis_pixel_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    axis_pixel_out_TVALID : OUT STD_LOGIC;
    axis_pixel_out_TREADY : IN STD_LOGIC;
    axis_pixel_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    axis_pixel_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    axis_pixel_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_AXI_Lite_1_AWVALID : IN STD_LOGIC;
    s_axi_AXI_Lite_1_AWREADY : OUT STD_LOGIC;
    s_axi_AXI_Lite_1_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXI_LITE_1_ADDR_WIDTH-1 downto 0);
    s_axi_AXI_Lite_1_WVALID : IN STD_LOGIC;
    s_axi_AXI_Lite_1_WREADY : OUT STD_LOGIC;
    s_axi_AXI_Lite_1_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_AXI_LITE_1_DATA_WIDTH-1 downto 0);
    s_axi_AXI_Lite_1_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_AXI_LITE_1_DATA_WIDTH/8-1 downto 0);
    s_axi_AXI_Lite_1_ARVALID : IN STD_LOGIC;
    s_axi_AXI_Lite_1_ARREADY : OUT STD_LOGIC;
    s_axi_AXI_Lite_1_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_AXI_LITE_1_ADDR_WIDTH-1 downto 0);
    s_axi_AXI_Lite_1_RVALID : OUT STD_LOGIC;
    s_axi_AXI_Lite_1_RREADY : IN STD_LOGIC;
    s_axi_AXI_Lite_1_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_AXI_LITE_1_DATA_WIDTH-1 downto 0);
    s_axi_AXI_Lite_1_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_AXI_Lite_1_BVALID : OUT STD_LOGIC;
    s_axi_AXI_Lite_1_BREADY : IN STD_LOGIC;
    s_axi_AXI_Lite_1_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    axi_lite_clk : IN STD_LOGIC;
    ap_rst_n_axi_lite_clk : IN STD_LOGIC );
end;


architecture behav of pixel_dma_in is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pixel_dma_in_pixel_dma_in,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=6.667000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.866910,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=5534,HLS_SYN_LUT=5487,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (40 downto 0) := "00000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (40 downto 0) := "00000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (40 downto 0) := "00001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (40 downto 0) := "00100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (40 downto 0) := "01000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (40 downto 0) := "10000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv30_2 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv30_4 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal axi_pixel_in : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_width : STD_LOGIC_VECTOR (31 downto 0);
    signal frame_height : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal cmp46_reg_528 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal frame_height_read_reg_471 : STD_LOGIC_VECTOR (31 downto 0);
    signal axi_pixel_in_read_reg_476 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_233_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_reg_484 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_34_fu_237_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_34_reg_490 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_35_fu_247_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_35_reg_496 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln_reg_502 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln68_fu_263_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln68_reg_507 : STD_LOGIC_VECTOR (28 downto 0);
    signal tmp_2_reg_512 : STD_LOGIC_VECTOR (24 downto 0);
    signal and_ln_fu_282_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal and_ln_reg_517 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal add_ln68_1_fu_289_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln68_1_reg_522 : STD_LOGIC_VECTOR (29 downto 0);
    signal cmp46_fu_294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal add_ln68_fu_299_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln68_reg_532 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_304_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln_reg_537 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_fu_311_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_reg_542 : STD_LOGIC_VECTOR (29 downto 0);
    signal indvars_iv_next262_fu_323_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal indvars_iv_next262_reg_550 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln68_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_333_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_36_reg_560 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal empty_37_fu_343_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_37_reg_569 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal empty_39_fu_353_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_39_reg_574 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_41_fu_358_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_41_reg_579 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln72_6_fu_362_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal add_ln72_6_reg_584 : STD_LOGIC_VECTOR (29 downto 0);
    signal empty_38_fu_373_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_38_reg_589 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal empty_40_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_40_reg_594 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_42_fu_397_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_42_reg_599 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln4_fu_402_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln4_reg_604 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln5_reg_614 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln6_reg_620 : STD_LOGIC_VECTOR (29 downto 0);
    signal buf0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf0_ce0 : STD_LOGIC;
    signal buf0_we0 : STD_LOGIC;
    signal buf0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf1_ce0 : STD_LOGIC;
    signal buf1_we0 : STD_LOGIC;
    signal buf1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal buf2_ce0 : STD_LOGIC;
    signal buf2_we0 : STD_LOGIC;
    signal buf2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_idle : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_ready : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_ap_start : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_ap_done : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_ap_idle : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_ap_ready : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_buf0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_2_fu_193_buf0_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_buf0_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_2_fu_193_buf0_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_ap_start : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_ap_done : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_ap_idle : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_ap_ready : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_buf1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_3_fu_201_buf1_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_buf1_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_3_fu_201_buf1_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_ap_start : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_ap_done : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_ap_idle : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_ap_ready : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_buf2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_4_fu_209_buf2_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_buf2_we0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_4_fu_209_buf2_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_done : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_idle : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_ready : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TREADY : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_ce0 : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_ce0 : STD_LOGIC;
    signal ap_rst_n_axi_lite_clk_inv : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (8 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal sext_ln93_fu_411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln94_fu_440_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln95_fu_450_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state12_io : BOOLEAN;
    signal i_fu_116 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state40_on_subcall_done : BOOLEAN;
    signal sub_fu_241_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_333_p0 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp1_fu_338_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp2_fu_348_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal tmp_3_fu_366_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_378_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_390_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal regslice_both_axis_pixel_out_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (40 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal axis_pixel_out_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal axis_pixel_out_TVALID_int_regslice : STD_LOGIC;
    signal axis_pixel_out_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal axis_pixel_out_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_axis_pixel_out_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal axis_pixel_out_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_axis_pixel_out_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_last_V_U_apdone_blk : STD_LOGIC;
    signal axis_pixel_out_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_axis_pixel_out_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_axis_pixel_out_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component pixel_dma_in_pixel_dma_in_Pipeline_VITIS_LOOP_71_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        axis_pixel_out_TREADY : IN STD_LOGIC;
        buf2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf2_ce0 : OUT STD_LOGIC;
        buf2_we0 : OUT STD_LOGIC;
        buf2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_we0 : OUT STD_LOGIC;
        buf1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        buf0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf0_ce0 : OUT STD_LOGIC;
        buf0_we0 : OUT STD_LOGIC;
        buf0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        trunc_ln : IN STD_LOGIC_VECTOR (26 downto 0);
        empty_17 : IN STD_LOGIC_VECTOR (29 downto 0);
        axi_pixel_in : IN STD_LOGIC_VECTOR (31 downto 0);
        empty : IN STD_LOGIC_VECTOR (29 downto 0);
        add_ln72_6 : IN STD_LOGIC_VECTOR (29 downto 0);
        axis_pixel_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        axis_pixel_out_TVALID : OUT STD_LOGIC;
        axis_pixel_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        axis_pixel_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        axis_pixel_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component pixel_dma_in_pixel_dma_in_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln93 : IN STD_LOGIC_VECTOR (29 downto 0);
        buf0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf0_ce0 : OUT STD_LOGIC;
        buf0_we0 : OUT STD_LOGIC;
        buf0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pixel_dma_in_pixel_dma_in_Pipeline_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln94 : IN STD_LOGIC_VECTOR (29 downto 0);
        buf1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_we0 : OUT STD_LOGIC;
        buf1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pixel_dma_in_pixel_dma_in_Pipeline_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln95 : IN STD_LOGIC_VECTOR (29 downto 0);
        buf2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf2_ce0 : OUT STD_LOGIC;
        buf2_we0 : OUT STD_LOGIC;
        buf2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pixel_dma_in_pixel_dma_in_Pipeline_VITIS_LOOP_97_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        axis_pixel_out_TREADY : IN STD_LOGIC;
        add_ln68 : IN STD_LOGIC_VECTOR (4 downto 0);
        buf0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf0_ce0 : OUT STD_LOGIC;
        buf0_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        axis_pixel_out_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        axis_pixel_out_TVALID : OUT STD_LOGIC;
        axis_pixel_out_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        axis_pixel_out_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        axis_pixel_out_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        buf1_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf1_ce0 : OUT STD_LOGIC;
        buf1_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        buf2_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        buf2_ce0 : OUT STD_LOGIC;
        buf2_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pixel_dma_in_mul_30s_30s_30_5_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (29 downto 0);
        din1 : IN STD_LOGIC_VECTOR (29 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component pixel_dma_in_buf0_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component pixel_dma_in_AXI_Lite_1_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        axi_pixel_in : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_width : OUT STD_LOGIC_VECTOR (31 downto 0);
        frame_height : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        rst : IN STD_LOGIC );
    end component;


    component pixel_dma_in_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (8 downto 0);
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (31 downto 0);
        I_WSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC );
    end component;


    component pixel_dma_in_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    buf0_U : component pixel_dma_in_buf0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf0_address0,
        ce0 => buf0_ce0,
        we0 => buf0_we0,
        d0 => buf0_d0,
        q0 => buf0_q0);

    buf1_U : component pixel_dma_in_buf0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf1_address0,
        ce0 => buf1_ce0,
        we0 => buf1_we0,
        d0 => buf1_d0,
        q0 => buf1_q0);

    buf2_U : component pixel_dma_in_buf0_RAM_AUTO_1R1W
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => buf2_address0,
        ce0 => buf2_ce0,
        we0 => buf2_we0,
        d0 => buf2_d0,
        q0 => buf2_q0);

    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171 : component pixel_dma_in_pixel_dma_in_Pipeline_VITIS_LOOP_71_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start,
        ap_done => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done,
        ap_idle => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_idle,
        ap_ready => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_ready,
        m_axi_gmem_AWVALID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        axis_pixel_out_TREADY => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TREADY,
        buf2_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_address0,
        buf2_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_ce0,
        buf2_we0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_we0,
        buf2_d0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_d0,
        buf1_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_address0,
        buf1_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_ce0,
        buf1_we0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_we0,
        buf1_d0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_d0,
        buf0_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_address0,
        buf0_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_ce0,
        buf0_we0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_we0,
        buf0_d0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_d0,
        trunc_ln => trunc_ln_reg_502,
        empty_17 => empty_36_reg_560,
        axi_pixel_in => axi_pixel_in_read_reg_476,
        empty => empty_35_reg_496,
        add_ln72_6 => add_ln72_6_reg_584,
        axis_pixel_out_TDATA => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TDATA,
        axis_pixel_out_TVALID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID,
        axis_pixel_out_TKEEP => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TKEEP,
        axis_pixel_out_TSTRB => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TSTRB,
        axis_pixel_out_TLAST => grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TLAST);

    grp_pixel_dma_in_Pipeline_2_fu_193 : component pixel_dma_in_pixel_dma_in_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pixel_dma_in_Pipeline_2_fu_193_ap_start,
        ap_done => grp_pixel_dma_in_Pipeline_2_fu_193_ap_done,
        ap_idle => grp_pixel_dma_in_Pipeline_2_fu_193_ap_idle,
        ap_ready => grp_pixel_dma_in_Pipeline_2_fu_193_ap_ready,
        m_axi_gmem_AWVALID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln93 => trunc_ln4_reg_604,
        buf0_address0 => grp_pixel_dma_in_Pipeline_2_fu_193_buf0_address0,
        buf0_ce0 => grp_pixel_dma_in_Pipeline_2_fu_193_buf0_ce0,
        buf0_we0 => grp_pixel_dma_in_Pipeline_2_fu_193_buf0_we0,
        buf0_d0 => grp_pixel_dma_in_Pipeline_2_fu_193_buf0_d0);

    grp_pixel_dma_in_Pipeline_3_fu_201 : component pixel_dma_in_pixel_dma_in_Pipeline_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pixel_dma_in_Pipeline_3_fu_201_ap_start,
        ap_done => grp_pixel_dma_in_Pipeline_3_fu_201_ap_done,
        ap_idle => grp_pixel_dma_in_Pipeline_3_fu_201_ap_idle,
        ap_ready => grp_pixel_dma_in_Pipeline_3_fu_201_ap_ready,
        m_axi_gmem_AWVALID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln94 => trunc_ln5_reg_614,
        buf1_address0 => grp_pixel_dma_in_Pipeline_3_fu_201_buf1_address0,
        buf1_ce0 => grp_pixel_dma_in_Pipeline_3_fu_201_buf1_ce0,
        buf1_we0 => grp_pixel_dma_in_Pipeline_3_fu_201_buf1_we0,
        buf1_d0 => grp_pixel_dma_in_Pipeline_3_fu_201_buf1_d0);

    grp_pixel_dma_in_Pipeline_4_fu_209 : component pixel_dma_in_pixel_dma_in_Pipeline_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pixel_dma_in_Pipeline_4_fu_209_ap_start,
        ap_done => grp_pixel_dma_in_Pipeline_4_fu_209_ap_done,
        ap_idle => grp_pixel_dma_in_Pipeline_4_fu_209_ap_idle,
        ap_ready => grp_pixel_dma_in_Pipeline_4_fu_209_ap_ready,
        m_axi_gmem_AWVALID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => ap_const_logic_0,
        m_axi_gmem_RID => ap_const_lv1_0,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => ap_const_lv1_0,
        m_axi_gmem_RRESP => ap_const_lv2_0,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln95 => trunc_ln6_reg_620,
        buf2_address0 => grp_pixel_dma_in_Pipeline_4_fu_209_buf2_address0,
        buf2_ce0 => grp_pixel_dma_in_Pipeline_4_fu_209_buf2_ce0,
        buf2_we0 => grp_pixel_dma_in_Pipeline_4_fu_209_buf2_we0,
        buf2_d0 => grp_pixel_dma_in_Pipeline_4_fu_209_buf2_d0);

    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217 : component pixel_dma_in_pixel_dma_in_Pipeline_VITIS_LOOP_97_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start,
        ap_done => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_done,
        ap_idle => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_idle,
        ap_ready => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_ready,
        axis_pixel_out_TREADY => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TREADY,
        add_ln68 => add_ln68_reg_532,
        buf0_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_address0,
        buf0_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_ce0,
        buf0_q0 => buf0_q0,
        axis_pixel_out_TDATA => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TDATA,
        axis_pixel_out_TVALID => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID,
        axis_pixel_out_TKEEP => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TKEEP,
        axis_pixel_out_TSTRB => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TSTRB,
        axis_pixel_out_TLAST => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TLAST,
        buf1_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_address0,
        buf1_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_ce0,
        buf1_q0 => buf1_q0,
        buf2_address0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_address0,
        buf2_ce0 => grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_ce0,
        buf2_q0 => buf2_q0);

    AXI_Lite_1_s_axi_U : component pixel_dma_in_AXI_Lite_1_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_AXI_LITE_1_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_AXI_LITE_1_DATA_WIDTH)
    port map (
        AWVALID => s_axi_AXI_Lite_1_AWVALID,
        AWREADY => s_axi_AXI_Lite_1_AWREADY,
        AWADDR => s_axi_AXI_Lite_1_AWADDR,
        WVALID => s_axi_AXI_Lite_1_WVALID,
        WREADY => s_axi_AXI_Lite_1_WREADY,
        WDATA => s_axi_AXI_Lite_1_WDATA,
        WSTRB => s_axi_AXI_Lite_1_WSTRB,
        ARVALID => s_axi_AXI_Lite_1_ARVALID,
        ARREADY => s_axi_AXI_Lite_1_ARREADY,
        ARADDR => s_axi_AXI_Lite_1_ARADDR,
        RVALID => s_axi_AXI_Lite_1_RVALID,
        RREADY => s_axi_AXI_Lite_1_RREADY,
        RDATA => s_axi_AXI_Lite_1_RDATA,
        RRESP => s_axi_AXI_Lite_1_RRESP,
        BVALID => s_axi_AXI_Lite_1_BVALID,
        BREADY => s_axi_AXI_Lite_1_BREADY,
        BRESP => s_axi_AXI_Lite_1_BRESP,
        ACLK => axi_lite_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        axi_pixel_in => axi_pixel_in,
        frame_width => frame_width,
        frame_height => frame_height,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        clk => ap_clk,
        rst => ap_rst_n_axi_lite_clk_inv);

    gmem_m_axi_U : component pixel_dma_in_gmem_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 9,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE,
        USER_DW => 32,
        USER_AW => 32)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARLEN => gmem_ARLEN,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv32_0,
        I_AWLEN => ap_const_lv32_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv32_0,
        I_WSTRB => ap_const_lv4_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0);

    mul_30s_30s_30_5_1_U31 : component pixel_dma_in_mul_30s_30s_30_5_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 30,
        din1_WIDTH => 30,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_333_p0,
        din1 => empty_35_reg_496,
        ce => ap_const_logic_1,
        dout => grp_fu_333_p2);

    regslice_both_axis_pixel_out_V_data_V_U : component pixel_dma_in_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axis_pixel_out_TDATA_int_regslice,
        vld_in => axis_pixel_out_TVALID_int_regslice,
        ack_in => axis_pixel_out_TREADY_int_regslice,
        data_out => axis_pixel_out_TDATA,
        vld_out => regslice_both_axis_pixel_out_V_data_V_U_vld_out,
        ack_out => axis_pixel_out_TREADY,
        apdone_blk => regslice_both_axis_pixel_out_V_data_V_U_apdone_blk);

    regslice_both_axis_pixel_out_V_keep_V_U : component pixel_dma_in_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axis_pixel_out_TKEEP_int_regslice,
        vld_in => axis_pixel_out_TVALID_int_regslice,
        ack_in => regslice_both_axis_pixel_out_V_keep_V_U_ack_in_dummy,
        data_out => axis_pixel_out_TKEEP,
        vld_out => regslice_both_axis_pixel_out_V_keep_V_U_vld_out,
        ack_out => axis_pixel_out_TREADY,
        apdone_blk => regslice_both_axis_pixel_out_V_keep_V_U_apdone_blk);

    regslice_both_axis_pixel_out_V_strb_V_U : component pixel_dma_in_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axis_pixel_out_TSTRB_int_regslice,
        vld_in => axis_pixel_out_TVALID_int_regslice,
        ack_in => regslice_both_axis_pixel_out_V_strb_V_U_ack_in_dummy,
        data_out => axis_pixel_out_TSTRB,
        vld_out => regslice_both_axis_pixel_out_V_strb_V_U_vld_out,
        ack_out => axis_pixel_out_TREADY,
        apdone_blk => regslice_both_axis_pixel_out_V_strb_V_U_apdone_blk);

    regslice_both_axis_pixel_out_V_last_V_U : component pixel_dma_in_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => axis_pixel_out_TLAST_int_regslice,
        vld_in => axis_pixel_out_TVALID_int_regslice,
        ack_in => regslice_both_axis_pixel_out_V_last_V_U_ack_in_dummy,
        data_out => axis_pixel_out_TLAST,
        vld_out => regslice_both_axis_pixel_out_V_last_V_U_vld_out,
        ack_out => axis_pixel_out_TREADY,
        apdone_blk => regslice_both_axis_pixel_out_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                    grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pixel_dma_in_Pipeline_2_fu_193_ap_ready = ap_const_logic_1)) then 
                    grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                    grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pixel_dma_in_Pipeline_3_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
                    grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pixel_dma_in_Pipeline_4_fu_209_ap_ready = ap_const_logic_1)) then 
                    grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_ready = ap_const_logic_1)) then 
                    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_ready = ap_const_logic_1)) then 
                    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_fu_116_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_fu_116 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
                i_fu_116 <= indvars_iv_next262_reg_550;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln68_1_reg_522 <= add_ln68_1_fu_289_p2;
                    and_ln_reg_517(29 downto 5) <= and_ln_fu_282_p3(29 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                add_ln68_reg_532 <= add_ln68_fu_299_p2;
                cmp46_reg_528 <= cmp46_fu_294_p2;
                    shl_ln_reg_537(29 downto 1) <= shl_ln_fu_304_p3(29 downto 1);
                tmp_reg_542 <= tmp_fu_311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add_ln72_6_reg_584 <= add_ln72_6_fu_362_p2;
                empty_37_reg_569 <= empty_37_fu_343_p2;
                empty_39_reg_574 <= empty_39_fu_353_p2;
                empty_41_reg_579 <= empty_41_fu_358_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                axi_pixel_in_read_reg_476 <= axi_pixel_in;
                empty_34_reg_490 <= empty_34_fu_237_p1;
                empty_35_reg_496 <= empty_35_fu_247_p2;
                empty_reg_484 <= empty_fu_233_p1;
                frame_height_read_reg_471 <= frame_height;
                tmp_2_reg_512 <= empty_35_fu_247_p2(29 downto 5);
                trunc_ln68_reg_507 <= trunc_ln68_fu_263_p1;
                trunc_ln_reg_502 <= sub_fu_241_p2(31 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                empty_36_reg_560 <= grp_fu_333_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                empty_38_reg_589 <= empty_38_fu_373_p2;
                empty_40_reg_594 <= empty_40_fu_385_p2;
                empty_42_reg_599 <= empty_42_fu_397_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                indvars_iv_next262_reg_550 <= indvars_iv_next262_fu_323_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0))) then
                trunc_ln4_reg_604 <= empty_42_reg_599(31 downto 2);
                trunc_ln5_reg_614 <= empty_40_reg_594(31 downto 2);
                trunc_ln6_reg_620 <= empty_38_reg_589(31 downto 2);
            end if;
        end if;
    end process;
    and_ln_reg_517(4 downto 0) <= "00000";
    shl_ln_reg_537(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, cmp46_reg_528, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state4, icmp_ln68_fu_318_p2, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done, grp_pixel_dma_in_Pipeline_2_fu_193_ap_done, grp_pixel_dma_in_Pipeline_3_fu_201_ap_done, grp_pixel_dma_in_Pipeline_4_fu_209_ap_done, gmem_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state29, ap_CS_fsm_state38, ap_CS_fsm_state40, ap_block_state12_io, ap_block_state40_on_subcall_done, ap_CS_fsm_state41, regslice_both_axis_pixel_out_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln68_fu_318_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_io) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                elsif (((ap_const_boolean_0 = ap_block_state12_io) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((grp_pixel_dma_in_Pipeline_2_fu_193_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state20))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((grp_pixel_dma_in_Pipeline_3_fu_201_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then
                    ap_NS_fsm <= ap_ST_fsm_state30;
                else
                    ap_NS_fsm <= ap_ST_fsm_state29;
                end if;
            when ap_ST_fsm_state30 => 
                if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((grp_pixel_dma_in_Pipeline_4_fu_209_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                if (((ap_const_boolean_0 = ap_block_state40_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((regslice_both_axis_pixel_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln68_1_fu_289_p2 <= std_logic_vector(unsigned(and_ln_fu_282_p3) + unsigned(empty_34_reg_490));
    add_ln68_fu_299_p2 <= std_logic_vector(unsigned(empty_reg_484) + unsigned(ap_const_lv5_2));
    add_ln72_6_fu_362_p2 <= std_logic_vector(unsigned(shl_ln_reg_537) + unsigned(empty_36_reg_560));
    and_ln_fu_282_p3 <= (tmp_2_reg_512 & ap_const_lv5_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done)
    begin
        if ((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_io)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_io)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(grp_pixel_dma_in_Pipeline_2_fu_193_ap_done)
    begin
        if ((grp_pixel_dma_in_Pipeline_2_fu_193_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state21_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state21_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state21_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;

    ap_ST_fsm_state29_blk_assign_proc : process(grp_pixel_dma_in_Pipeline_3_fu_201_ap_done)
    begin
        if ((grp_pixel_dma_in_Pipeline_3_fu_201_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state29_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state29_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state30_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state30_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state30_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(grp_pixel_dma_in_Pipeline_4_fu_209_ap_done)
    begin
        if ((grp_pixel_dma_in_Pipeline_4_fu_209_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(ap_block_state40_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state40_on_subcall_done)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state41_blk_assign_proc : process(regslice_both_axis_pixel_out_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_axis_pixel_out_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state41_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state41_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_io_assign_proc : process(cmp46_reg_528, gmem_ARREADY)
    begin
                ap_block_state12_io <= ((gmem_ARREADY = ap_const_logic_0) and (cmp46_reg_528 = ap_const_lv1_0));
    end process;


    ap_block_state40_on_subcall_done_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_done)
    begin
                ap_block_state40_on_subcall_done <= ((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_done = ap_const_logic_0) and (cmp46_reg_528 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state41, regslice_both_axis_pixel_out_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_axis_pixel_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state41, regslice_both_axis_pixel_out_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_axis_pixel_out_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_axi_lite_clk_inv_assign_proc : process(ap_rst_n_axi_lite_clk)
    begin
                ap_rst_n_axi_lite_clk_inv <= not(ap_rst_n_axi_lite_clk);
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    axis_pixel_out_TDATA_int_regslice_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TDATA, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TDATA, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state40)
    begin
        if (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            axis_pixel_out_TDATA_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TDATA;
        elsif (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            axis_pixel_out_TDATA_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TDATA;
        else 
            axis_pixel_out_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    axis_pixel_out_TKEEP_int_regslice_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TKEEP, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TKEEP, ap_CS_fsm_state11, ap_CS_fsm_state40)
    begin
        if (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            axis_pixel_out_TKEEP_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TKEEP;
        elsif (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            axis_pixel_out_TKEEP_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TKEEP;
        else 
            axis_pixel_out_TKEEP_int_regslice <= "XXXX";
        end if; 
    end process;


    axis_pixel_out_TLAST_int_regslice_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TLAST, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TLAST, ap_CS_fsm_state11, ap_CS_fsm_state40)
    begin
        if (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            axis_pixel_out_TLAST_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TLAST;
        elsif (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            axis_pixel_out_TLAST_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TLAST;
        else 
            axis_pixel_out_TLAST_int_regslice <= "X";
        end if; 
    end process;


    axis_pixel_out_TSTRB_int_regslice_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TSTRB, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TSTRB, ap_CS_fsm_state11, ap_CS_fsm_state40)
    begin
        if (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            axis_pixel_out_TSTRB_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TSTRB;
        elsif (((grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            axis_pixel_out_TSTRB_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TSTRB;
        else 
            axis_pixel_out_TSTRB_int_regslice <= "XXXX";
        end if; 
    end process;

    axis_pixel_out_TVALID <= regslice_both_axis_pixel_out_V_data_V_U_vld_out;

    axis_pixel_out_TVALID_int_regslice_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID, ap_CS_fsm_state11, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            axis_pixel_out_TVALID_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TVALID;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            axis_pixel_out_TVALID_int_regslice <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TVALID;
        else 
            axis_pixel_out_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    buf0_address0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_address0, grp_pixel_dma_in_Pipeline_2_fu_193_buf0_address0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_address0, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf0_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buf0_address0 <= grp_pixel_dma_in_Pipeline_2_fu_193_buf0_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf0_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_address0;
        else 
            buf0_address0 <= "XXXXX";
        end if; 
    end process;


    buf0_ce0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_ce0, grp_pixel_dma_in_Pipeline_2_fu_193_buf0_ce0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_ce0, ap_CS_fsm_state11, ap_CS_fsm_state20, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf0_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buf0_ce0 <= grp_pixel_dma_in_Pipeline_2_fu_193_buf0_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf0_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_ce0;
        else 
            buf0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf0_d0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_d0, grp_pixel_dma_in_Pipeline_2_fu_193_buf0_d0, ap_CS_fsm_state11, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buf0_d0 <= grp_pixel_dma_in_Pipeline_2_fu_193_buf0_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf0_d0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_d0;
        else 
            buf0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf0_we0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_we0, grp_pixel_dma_in_Pipeline_2_fu_193_buf0_we0, ap_CS_fsm_state11, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            buf0_we0 <= grp_pixel_dma_in_Pipeline_2_fu_193_buf0_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf0_we0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf0_we0;
        else 
            buf0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_address0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_address0, grp_pixel_dma_in_Pipeline_3_fu_201_buf1_address0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_address0, ap_CS_fsm_state11, ap_CS_fsm_state29, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf1_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buf1_address0 <= grp_pixel_dma_in_Pipeline_3_fu_201_buf1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf1_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_address0;
        else 
            buf1_address0 <= "XXXXX";
        end if; 
    end process;


    buf1_ce0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_ce0, grp_pixel_dma_in_Pipeline_3_fu_201_buf1_ce0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_ce0, ap_CS_fsm_state11, ap_CS_fsm_state29, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf1_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buf1_ce0 <= grp_pixel_dma_in_Pipeline_3_fu_201_buf1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf1_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_ce0;
        else 
            buf1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf1_d0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_d0, grp_pixel_dma_in_Pipeline_3_fu_201_buf1_d0, ap_CS_fsm_state11, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buf1_d0 <= grp_pixel_dma_in_Pipeline_3_fu_201_buf1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf1_d0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_d0;
        else 
            buf1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf1_we0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_we0, grp_pixel_dma_in_Pipeline_3_fu_201_buf1_we0, ap_CS_fsm_state11, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            buf1_we0 <= grp_pixel_dma_in_Pipeline_3_fu_201_buf1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf1_we0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf1_we0;
        else 
            buf1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    buf2_address0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_address0, grp_pixel_dma_in_Pipeline_4_fu_209_buf2_address0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_address0, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf2_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buf2_address0 <= grp_pixel_dma_in_Pipeline_4_fu_209_buf2_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf2_address0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_address0;
        else 
            buf2_address0 <= "XXXXX";
        end if; 
    end process;


    buf2_ce0_assign_proc : process(cmp46_reg_528, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_ce0, grp_pixel_dma_in_Pipeline_4_fu_209_buf2_ce0, grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_ce0, ap_CS_fsm_state11, ap_CS_fsm_state38, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            buf2_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_buf2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buf2_ce0 <= grp_pixel_dma_in_Pipeline_4_fu_209_buf2_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf2_ce0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_ce0;
        else 
            buf2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf2_d0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_d0, grp_pixel_dma_in_Pipeline_4_fu_209_buf2_d0, ap_CS_fsm_state11, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buf2_d0 <= grp_pixel_dma_in_Pipeline_4_fu_209_buf2_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf2_d0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_d0;
        else 
            buf2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    buf2_we0_assign_proc : process(grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_we0, grp_pixel_dma_in_Pipeline_4_fu_209_buf2_we0, ap_CS_fsm_state11, ap_CS_fsm_state38)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            buf2_we0 <= grp_pixel_dma_in_Pipeline_4_fu_209_buf2_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            buf2_we0 <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_buf2_we0;
        else 
            buf2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    cmp46_fu_294_p2 <= "1" when (empty_reg_484 = ap_const_lv5_1E) else "0";
    empty_34_fu_237_p1 <= frame_width(30 - 1 downto 0);
    empty_35_fu_247_p2 <= std_logic_vector(unsigned(empty_34_fu_237_p1) + unsigned(ap_const_lv30_2));
    empty_37_fu_343_p2 <= std_logic_vector(unsigned(tmp1_fu_338_p2) + unsigned(tmp_reg_542));
    empty_38_fu_373_p2 <= std_logic_vector(unsigned(tmp_3_fu_366_p3) + unsigned(axi_pixel_in_read_reg_476));
    empty_39_fu_353_p2 <= std_logic_vector(unsigned(tmp2_fu_348_p2) + unsigned(add_ln68_1_reg_522));
    empty_40_fu_385_p2 <= std_logic_vector(unsigned(tmp_4_fu_378_p3) + unsigned(axi_pixel_in_read_reg_476));
    empty_41_fu_358_p2 <= std_logic_vector(unsigned(empty_36_reg_560) + unsigned(and_ln_reg_517));
    empty_42_fu_397_p2 <= std_logic_vector(unsigned(tmp_5_fu_390_p3) + unsigned(axi_pixel_in_read_reg_476));
    empty_fu_233_p1 <= frame_width(5 - 1 downto 0);

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state12, cmp46_reg_528, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state10, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARADDR, grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARADDR, grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARADDR, grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state38, sext_ln93_fu_411_p1, sext_ln94_fu_440_p1, sext_ln95_fu_450_p1, ap_block_state12_io)
    begin
        if (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30))) then 
            gmem_ARADDR <= sext_ln95_fu_450_p1;
        elsif (((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARADDR <= sext_ln94_fu_440_p1;
        elsif (((ap_const_boolean_0 = ap_block_state12_io) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0))) then 
            gmem_ARADDR <= sext_ln93_fu_411_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            gmem_ARADDR <= grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_ARADDR <= grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            gmem_ARADDR <= grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARADDR <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state12, cmp46_reg_528, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state10, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLEN, grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLEN, grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLEN, grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_block_state12_io)
    begin
        if ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_boolean_0 = ap_block_state12_io) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0)))) then 
            gmem_ARLEN <= ap_const_lv32_20;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            gmem_ARLEN <= grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_ARLEN <= grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            gmem_ARLEN <= grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARLEN <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state12, cmp46_reg_528, ap_CS_fsm_state21, ap_CS_fsm_state30, ap_CS_fsm_state10, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARVALID, grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARVALID, grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARVALID, grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_block_state12_io)
    begin
        if ((((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state30)) or ((gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state21)) or ((ap_const_boolean_0 = ap_block_state12_io) and (ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            gmem_ARVALID <= grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_ARVALID <= grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            gmem_ARVALID <= grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARVALID <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state10, grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_RREADY, grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_RREADY, grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_RREADY, grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_RREADY, ap_CS_fsm_state11, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state37, ap_CS_fsm_state38)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37))) then 
            gmem_RREADY <= grp_pixel_dma_in_Pipeline_4_fu_209_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28))) then 
            gmem_RREADY <= grp_pixel_dma_in_Pipeline_3_fu_201_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            gmem_RREADY <= grp_pixel_dma_in_Pipeline_2_fu_193_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_RREADY <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state12, cmp46_reg_528, ap_CS_fsm_state21, ap_CS_fsm_state30)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state21) or ((ap_const_logic_1 = ap_CS_fsm_state12) and (cmp46_reg_528 = ap_const_lv1_0)))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_333_p0 <= i_fu_116(30 - 1 downto 0);
    grp_pixel_dma_in_Pipeline_2_fu_193_ap_start <= grp_pixel_dma_in_Pipeline_2_fu_193_ap_start_reg;
    grp_pixel_dma_in_Pipeline_3_fu_201_ap_start <= grp_pixel_dma_in_Pipeline_3_fu_201_ap_start_reg;
    grp_pixel_dma_in_Pipeline_4_fu_209_ap_start <= grp_pixel_dma_in_Pipeline_4_fu_209_ap_start_reg;
    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_ap_start_reg;
    grp_pixel_dma_in_Pipeline_VITIS_LOOP_71_2_fu_171_axis_pixel_out_TREADY <= (axis_pixel_out_TREADY_int_regslice and ap_CS_fsm_state11);
    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start <= grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_ap_start_reg;
    grp_pixel_dma_in_Pipeline_VITIS_LOOP_97_4_fu_217_axis_pixel_out_TREADY <= (axis_pixel_out_TREADY_int_regslice and ap_CS_fsm_state40);
    icmp_ln68_fu_318_p2 <= "1" when (i_fu_116 = frame_height_read_reg_471) else "0";
    indvars_iv_next262_fu_323_p2 <= std_logic_vector(unsigned(i_fu_116) + unsigned(ap_const_lv32_1));
        sext_ln93_fu_411_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln4_fu_402_p4),32));

        sext_ln94_fu_440_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln5_reg_614),32));

        sext_ln95_fu_450_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln6_reg_620),32));

    shl_ln_fu_304_p3 <= (trunc_ln68_reg_507 & ap_const_lv1_0);
    sub_fu_241_p2 <= std_logic_vector(unsigned(frame_width) + unsigned(ap_const_lv32_2));
    tmp1_fu_338_p2 <= std_logic_vector(unsigned(empty_36_reg_560) + unsigned(ap_const_lv30_4));
    tmp2_fu_348_p2 <= std_logic_vector(unsigned(empty_36_reg_560) + unsigned(ap_const_lv30_2));
    tmp_3_fu_366_p3 <= (empty_37_reg_569 & ap_const_lv2_0);
    tmp_4_fu_378_p3 <= (empty_39_reg_574 & ap_const_lv2_0);
    tmp_5_fu_390_p3 <= (empty_41_reg_579 & ap_const_lv2_0);
    tmp_fu_311_p2 <= std_logic_vector(unsigned(empty_34_reg_490) + unsigned(add_ln68_1_reg_522));
    trunc_ln4_fu_402_p4 <= empty_42_reg_599(31 downto 2);
    trunc_ln68_fu_263_p1 <= frame_width(29 - 1 downto 0);
end behav;
