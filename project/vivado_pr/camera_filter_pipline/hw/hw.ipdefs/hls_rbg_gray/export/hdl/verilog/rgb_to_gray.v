// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rgb_to_gray_rgb_to_gray,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=4.200000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=490,HLS_SYN_LUT=252,HLS_VERSION=2022_1}" *)

module rgb_to_gray (
        ap_clk,
        ap_rst_n,
        in_stream_TVALID,
        out_stream_TREADY,
        in_stream_TDATA,
        in_stream_TREADY,
        in_stream_TKEEP,
        in_stream_TSTRB,
        in_stream_TUSER,
        in_stream_TLAST,
        out_stream_TDATA,
        out_stream_TVALID,
        out_stream_TKEEP,
        out_stream_TSTRB,
        out_stream_TUSER,
        out_stream_TLAST,
        grayscale_mode
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst_n;
input   in_stream_TVALID;
input   out_stream_TREADY;
input  [31:0] in_stream_TDATA;
output   in_stream_TREADY;
input  [3:0] in_stream_TKEEP;
input  [3:0] in_stream_TSTRB;
input  [0:0] in_stream_TUSER;
input  [0:0] in_stream_TLAST;
output  [31:0] out_stream_TDATA;
output   out_stream_TVALID;
output  [3:0] out_stream_TKEEP;
output  [3:0] out_stream_TSTRB;
output  [0:0] out_stream_TUSER;
output  [0:0] out_stream_TLAST;
input   grayscale_mode;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire   [0:0] tmp_nbreadreq_fu_92_p7;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    regslice_both_out_stream_V_data_V_U_apdone_blk;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_enable_reg_pp0_iter5;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_enable_reg_pp0_iter6;
wire    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter0_stage0;
reg    ap_ready_int;
reg    in_stream_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg    out_stream_TDATA_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] grayscale_mode_read_read_fu_86_p2;
reg   [0:0] grayscale_mode_read_reg_298;
reg   [0:0] grayscale_mode_read_reg_298_pp0_iter1_reg;
reg   [0:0] grayscale_mode_read_reg_298_pp0_iter2_reg;
reg   [0:0] grayscale_mode_read_reg_298_pp0_iter3_reg;
reg   [0:0] grayscale_mode_read_reg_298_pp0_iter4_reg;
reg   [31:0] tmp_data_V_1_reg_307;
reg   [31:0] tmp_data_V_1_reg_307_pp0_iter1_reg;
reg   [31:0] tmp_data_V_1_reg_307_pp0_iter2_reg;
reg   [31:0] tmp_data_V_1_reg_307_pp0_iter3_reg;
reg   [31:0] tmp_data_V_1_reg_307_pp0_iter4_reg;
reg   [3:0] tmp_keep_V_reg_312;
reg   [3:0] tmp_keep_V_reg_312_pp0_iter1_reg;
reg   [3:0] tmp_keep_V_reg_312_pp0_iter2_reg;
reg   [3:0] tmp_keep_V_reg_312_pp0_iter3_reg;
reg   [3:0] tmp_keep_V_reg_312_pp0_iter4_reg;
reg   [3:0] tmp_strb_V_reg_317;
reg   [3:0] tmp_strb_V_reg_317_pp0_iter1_reg;
reg   [3:0] tmp_strb_V_reg_317_pp0_iter2_reg;
reg   [3:0] tmp_strb_V_reg_317_pp0_iter3_reg;
reg   [3:0] tmp_strb_V_reg_317_pp0_iter4_reg;
reg   [0:0] tmp_user_V_reg_322;
reg   [0:0] tmp_user_V_reg_322_pp0_iter1_reg;
reg   [0:0] tmp_user_V_reg_322_pp0_iter2_reg;
reg   [0:0] tmp_user_V_reg_322_pp0_iter3_reg;
reg   [0:0] tmp_user_V_reg_322_pp0_iter4_reg;
reg   [0:0] tmp_last_V_reg_327;
reg   [0:0] tmp_last_V_reg_327_pp0_iter1_reg;
reg   [0:0] tmp_last_V_reg_327_pp0_iter2_reg;
reg   [0:0] tmp_last_V_reg_327_pp0_iter3_reg;
reg   [0:0] tmp_last_V_reg_327_pp0_iter4_reg;
reg   [7:0] tmp_s_reg_332;
reg   [7:0] tmp_1_reg_337;
reg   [7:0] tmp_1_reg_337_pp0_iter1_reg;
wire   [23:0] grp_fu_275_p3;
reg    ap_enable_reg_pp0_iter4;
wire   [31:0] out_data_data_V_fu_256_p3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg   [31:0] p_Val2_s_fu_82;
reg    ap_block_pp0_stage0_01001;
wire   [7:0] trunc_ln674_fu_171_p1;
wire   [15:0] p_Result_1_fu_175_p3;
wire   [15:0] p_Result_s_fu_197_p3;
wire   [15:0] p_Result_2_fu_208_p3;
wire   [22:0] grp_fu_268_p2;
wire   [23:0] grp_fu_283_p3;
wire   [7:0] grayscale_value_V_fu_225_p4;
wire   [23:0] tmp_2_fu_234_p4;
wire   [31:0] p_Result_3_fu_244_p5;
wire   [15:0] grp_fu_268_p0;
wire   [6:0] grp_fu_268_p1;
wire   [15:0] grp_fu_275_p0;
wire   [6:0] grp_fu_275_p1;
wire   [22:0] grp_fu_275_p2;
wire   [15:0] grp_fu_283_p0;
wire   [6:0] grp_fu_283_p1;
reg    grp_fu_268_ce;
reg    grp_fu_275_ce;
reg    grp_fu_283_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready;
wire    ap_done;
wire    ap_continue_int;
wire    ap_loop_init;
wire    regslice_both_in_stream_V_data_V_U_apdone_blk;
wire   [31:0] in_stream_TDATA_int_regslice;
wire    in_stream_TVALID_int_regslice;
reg    in_stream_TREADY_int_regslice;
wire    regslice_both_in_stream_V_data_V_U_ack_in;
wire    regslice_both_in_stream_V_keep_V_U_apdone_blk;
wire   [3:0] in_stream_TKEEP_int_regslice;
wire    regslice_both_in_stream_V_keep_V_U_vld_out;
wire    regslice_both_in_stream_V_keep_V_U_ack_in;
wire    regslice_both_in_stream_V_strb_V_U_apdone_blk;
wire   [3:0] in_stream_TSTRB_int_regslice;
wire    regslice_both_in_stream_V_strb_V_U_vld_out;
wire    regslice_both_in_stream_V_strb_V_U_ack_in;
wire    regslice_both_in_stream_V_user_V_U_apdone_blk;
wire   [0:0] in_stream_TUSER_int_regslice;
wire    regslice_both_in_stream_V_user_V_U_vld_out;
wire    regslice_both_in_stream_V_user_V_U_ack_in;
wire    regslice_both_in_stream_V_last_V_U_apdone_blk;
wire   [0:0] in_stream_TLAST_int_regslice;
wire    regslice_both_in_stream_V_last_V_U_vld_out;
wire    regslice_both_in_stream_V_last_V_U_ack_in;
wire   [31:0] out_stream_TDATA_int_regslice;
reg    out_stream_TVALID_int_regslice;
wire    out_stream_TREADY_int_regslice;
wire    regslice_both_out_stream_V_data_V_U_vld_out;
wire    regslice_both_out_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_out_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_keep_V_U_vld_out;
wire    regslice_both_out_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_out_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_strb_V_U_vld_out;
wire    regslice_both_out_stream_V_user_V_U_apdone_blk;
wire    regslice_both_out_stream_V_user_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_user_V_U_vld_out;
wire    regslice_both_out_stream_V_last_V_U_apdone_blk;
wire    regslice_both_out_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_out_stream_V_last_V_U_vld_out;
wire   [22:0] grp_fu_268_p00;
wire   [22:0] grp_fu_275_p00;
wire   [23:0] grp_fu_275_p20;
wire   [22:0] grp_fu_283_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
end

rgb_to_gray_mul_mul_16ns_7ns_23_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 23 ))
mul_mul_16ns_7ns_23_4_1_U1(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_268_p0),
    .din1(grp_fu_268_p1),
    .ce(grp_fu_268_ce),
    .dout(grp_fu_268_p2)
);

rgb_to_gray_mac_muladd_16ns_7ns_23ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 24 ))
mac_muladd_16ns_7ns_23ns_24_4_1_U2(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_275_p0),
    .din1(grp_fu_275_p1),
    .din2(grp_fu_275_p2),
    .ce(grp_fu_275_ce),
    .dout(grp_fu_275_p3)
);

rgb_to_gray_mac_muladd_16ns_7ns_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16ns_7ns_24ns_24_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_283_p0),
    .din1(grp_fu_283_p1),
    .din2(grp_fu_275_p3),
    .ce(grp_fu_283_ce),
    .dout(grp_fu_283_p3)
);

rgb_to_gray_flow_control_loop_pipe_no_ap_cont flow_control_loop_pipe_no_ap_cont_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(1'b1),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(1'b0),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(1'b0)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TDATA),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_data_V_U_ack_in),
    .data_out(in_stream_TDATA_int_regslice),
    .vld_out(in_stream_TVALID_int_regslice),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_data_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TKEEP),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_keep_V_U_ack_in),
    .data_out(in_stream_TKEEP_int_regslice),
    .vld_out(regslice_both_in_stream_V_keep_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_keep_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 4 ))
regslice_both_in_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TSTRB),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_strb_V_U_ack_in),
    .data_out(in_stream_TSTRB_int_regslice),
    .vld_out(regslice_both_in_stream_V_strb_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_strb_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_stream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TUSER),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_user_V_U_ack_in),
    .data_out(in_stream_TUSER_int_regslice),
    .vld_out(regslice_both_in_stream_V_user_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_user_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_stream_TLAST),
    .vld_in(in_stream_TVALID),
    .ack_in(regslice_both_in_stream_V_last_V_U_ack_in),
    .data_out(in_stream_TLAST_int_regslice),
    .vld_out(regslice_both_in_stream_V_last_V_U_vld_out),
    .ack_out(in_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_in_stream_V_last_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_stream_TDATA_int_regslice),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(out_stream_TREADY_int_regslice),
    .data_out(out_stream_TDATA),
    .vld_out(regslice_both_out_stream_V_data_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_data_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_keep_V_reg_312_pp0_iter4_reg),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_keep_V_U_ack_in_dummy),
    .data_out(out_stream_TKEEP),
    .vld_out(regslice_both_out_stream_V_keep_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_keep_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 4 ))
regslice_both_out_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_strb_V_reg_317_pp0_iter4_reg),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_strb_V_U_ack_in_dummy),
    .data_out(out_stream_TSTRB),
    .vld_out(regslice_both_out_stream_V_strb_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_strb_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_user_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_user_V_reg_322_pp0_iter4_reg),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_user_V_U_ack_in_dummy),
    .data_out(out_stream_TUSER),
    .vld_out(regslice_both_out_stream_V_user_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_user_V_U_apdone_blk)
);

rgb_to_gray_regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(tmp_last_V_reg_327_pp0_iter4_reg),
    .vld_in(out_stream_TVALID_int_regslice),
    .ack_in(regslice_both_out_stream_V_last_V_U_ack_in_dummy),
    .data_out(out_stream_TLAST),
    .vld_out(regslice_both_out_stream_V_last_V_U_vld_out),
    .ack_out(out_stream_TREADY),
    .apdone_blk(regslice_both_out_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grayscale_mode_read_reg_298 <= grayscale_mode;
        grayscale_mode_read_reg_298_pp0_iter1_reg <= grayscale_mode_read_reg_298;
        tmp_1_reg_337_pp0_iter1_reg <= tmp_1_reg_337;
        tmp_data_V_1_reg_307_pp0_iter1_reg <= tmp_data_V_1_reg_307;
        tmp_keep_V_reg_312_pp0_iter1_reg <= tmp_keep_V_reg_312;
        tmp_last_V_reg_327_pp0_iter1_reg <= tmp_last_V_reg_327;
        tmp_strb_V_reg_317_pp0_iter1_reg <= tmp_strb_V_reg_317;
        tmp_user_V_reg_322_pp0_iter1_reg <= tmp_user_V_reg_322;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        grayscale_mode_read_reg_298_pp0_iter2_reg <= grayscale_mode_read_reg_298_pp0_iter1_reg;
        grayscale_mode_read_reg_298_pp0_iter3_reg <= grayscale_mode_read_reg_298_pp0_iter2_reg;
        grayscale_mode_read_reg_298_pp0_iter4_reg <= grayscale_mode_read_reg_298_pp0_iter3_reg;
        tmp_data_V_1_reg_307_pp0_iter2_reg <= tmp_data_V_1_reg_307_pp0_iter1_reg;
        tmp_data_V_1_reg_307_pp0_iter3_reg <= tmp_data_V_1_reg_307_pp0_iter2_reg;
        tmp_data_V_1_reg_307_pp0_iter4_reg <= tmp_data_V_1_reg_307_pp0_iter3_reg;
        tmp_keep_V_reg_312_pp0_iter2_reg <= tmp_keep_V_reg_312_pp0_iter1_reg;
        tmp_keep_V_reg_312_pp0_iter3_reg <= tmp_keep_V_reg_312_pp0_iter2_reg;
        tmp_keep_V_reg_312_pp0_iter4_reg <= tmp_keep_V_reg_312_pp0_iter3_reg;
        tmp_last_V_reg_327_pp0_iter2_reg <= tmp_last_V_reg_327_pp0_iter1_reg;
        tmp_last_V_reg_327_pp0_iter3_reg <= tmp_last_V_reg_327_pp0_iter2_reg;
        tmp_last_V_reg_327_pp0_iter4_reg <= tmp_last_V_reg_327_pp0_iter3_reg;
        tmp_strb_V_reg_317_pp0_iter2_reg <= tmp_strb_V_reg_317_pp0_iter1_reg;
        tmp_strb_V_reg_317_pp0_iter3_reg <= tmp_strb_V_reg_317_pp0_iter2_reg;
        tmp_strb_V_reg_317_pp0_iter4_reg <= tmp_strb_V_reg_317_pp0_iter3_reg;
        tmp_user_V_reg_322_pp0_iter2_reg <= tmp_user_V_reg_322_pp0_iter1_reg;
        tmp_user_V_reg_322_pp0_iter3_reg <= tmp_user_V_reg_322_pp0_iter2_reg;
        tmp_user_V_reg_322_pp0_iter4_reg <= tmp_user_V_reg_322_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        p_Val2_s_fu_82 <= out_data_data_V_fu_256_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((grayscale_mode_read_read_fu_86_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_92_p7 == 1'd1))) begin
        tmp_1_reg_337 <= {{in_stream_TDATA_int_regslice[15:8]}};
        tmp_s_reg_332 <= {{in_stream_TDATA_int_regslice[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_92_p7 == 1'd1))) begin
        tmp_data_V_1_reg_307 <= in_stream_TDATA_int_regslice;
        tmp_keep_V_reg_312 <= in_stream_TKEEP_int_regslice;
        tmp_last_V_reg_327 <= in_stream_TLAST_int_regslice;
        tmp_strb_V_reg_317 <= in_stream_TSTRB_int_regslice;
        tmp_user_V_reg_322 <= in_stream_TUSER_int_regslice;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_92_p7 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (1'b1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_268_ce = 1'b1;
    end else begin
        grp_fu_268_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_275_ce = 1'b1;
    end else begin
        grp_fu_275_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_283_ce = 1'b1;
    end else begin
        grp_fu_283_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_92_p7 == 1'd1))) begin
        in_stream_TDATA_blk_n = in_stream_TVALID_int_regslice;
    end else begin
        in_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_nbreadreq_fu_92_p7 == 1'd1))) begin
        in_stream_TREADY_int_regslice = 1'b1;
    end else begin
        in_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        out_stream_TDATA_blk_n = out_stream_TREADY_int_regslice;
    end else begin
        out_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        out_stream_TVALID_int_regslice = 1'b1;
    end else begin
        out_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (out_stream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1))) | ((in_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_92_p7 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (out_stream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1))) | ((in_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_92_p7 == 1'd1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1)) | ((ap_enable_reg_pp0_iter6 == 1'b1) & (out_stream_TREADY_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter5 == 1'b1) & ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1))) | ((in_stream_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1) & (tmp_nbreadreq_fu_92_p7 == 1'd1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((in_stream_TVALID_int_regslice == 1'b0) & (tmp_nbreadreq_fu_92_p7 == 1'd1));
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = ((out_stream_TREADY_int_regslice == 1'b0) | (regslice_both_out_stream_V_data_V_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = (out_stream_TREADY_int_regslice == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready_pp0_iter5_reg = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grayscale_mode_read_read_fu_86_p2 = grayscale_mode;

assign grayscale_value_V_fu_225_p4 = {{grp_fu_283_p3[23:16]}};

assign grp_fu_268_p0 = grp_fu_268_p00;

assign grp_fu_268_p00 = p_Result_1_fu_175_p3;

assign grp_fu_268_p1 = 23'd85;

assign grp_fu_275_p0 = grp_fu_275_p00;

assign grp_fu_275_p00 = p_Result_s_fu_197_p3;

assign grp_fu_275_p1 = 23'd85;

assign grp_fu_275_p2 = grp_fu_275_p20;

assign grp_fu_275_p20 = grp_fu_268_p2;

assign grp_fu_283_p0 = grp_fu_283_p00;

assign grp_fu_283_p00 = p_Result_2_fu_208_p3;

assign grp_fu_283_p1 = 23'd85;

assign in_stream_TREADY = regslice_both_in_stream_V_data_V_U_ack_in;

assign out_data_data_V_fu_256_p3 = ((grayscale_mode_read_reg_298_pp0_iter4_reg[0:0] == 1'b1) ? p_Result_3_fu_244_p5 : tmp_data_V_1_reg_307_pp0_iter4_reg);

assign out_stream_TDATA_int_regslice = ((grayscale_mode_read_reg_298_pp0_iter4_reg[0:0] == 1'b1) ? p_Result_3_fu_244_p5 : tmp_data_V_1_reg_307_pp0_iter4_reg);

assign out_stream_TVALID = regslice_both_out_stream_V_data_V_U_vld_out;

assign p_Result_1_fu_175_p3 = {{trunc_ln674_fu_171_p1}, {8'd0}};

assign p_Result_2_fu_208_p3 = {{tmp_1_reg_337_pp0_iter1_reg}, {8'd0}};

assign p_Result_3_fu_244_p5 = {{p_Val2_s_fu_82[31:24]}, {tmp_2_fu_234_p4}};

assign p_Result_s_fu_197_p3 = {{tmp_s_reg_332}, {8'd0}};

assign tmp_2_fu_234_p4 = {{{grayscale_value_V_fu_225_p4}, {grayscale_value_V_fu_225_p4}}, {grayscale_value_V_fu_225_p4}};

assign tmp_nbreadreq_fu_92_p7 = in_stream_TVALID_int_regslice;

assign trunc_ln674_fu_171_p1 = in_stream_TDATA_int_regslice[7:0];


reg find_kernel_block = 0;
// synthesis translate_off
`include "rgb_to_gray_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //rgb_to_gray

